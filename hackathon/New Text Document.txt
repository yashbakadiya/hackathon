entity-----------------------------------------------------------------

package com.example.gadgets.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.sun.istack.NotNull;

@Entity
@Table( name = "Gadgets")
public class Gadgets {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column
	@NotNull
	private Integer id;
	
	@Column
	@NotNull
	private String itemName;
	
	@Column
	@NotNull
	private String brandName;
	
	@Column
	@NotNull
	private Integer units;
	
	@Column
	@NotNull
	private Double price;
	
	
	public Gadgets(String itemName, String brandName, Integer units, Double price) {
		super();
		this.itemName = itemName;
		this.brandName = brandName;
		this.units = units;
		this.price = price;
	}

	public Gadgets() {
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getItemName() {
		return itemName;
	}

	public void setItemName(String itemName) {
		this.itemName = itemName;
	}

	public String getBrandName() {
		return brandName;
	}

	public void setBrandName(String brandName) {
		this.brandName = brandName;
	}

	public Integer getUnits() {
		return units;
	}

	public void setUnits(Integer units) {
		this.units = units;
	}

	public Double getPrice() {
		return price;
	}

	public void setPrice(Double price) {
		this.price = price;
	}

	@Override
	public String toString() {
		return "Electronics [id=" + id + ", itemName=" + itemName + ", brandName=" + brandName + ", units=" + units
				+ ", price=" + price + "]";
	}
	
}


service------------------------------------------------------------------------------

package com.example.gadgets.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.gadgets.entity.Gadgets;
import com.example.gadgets.repository.GadgetsRepository;
import org.springframework.web.bind.annotation.PathVariable;


@Service
public class GadgetsService {

	@Autowired
	GadgetsRepository gadgetsRepo;
	
	public List<Gadgets> getAllItems(){
//		return gadgetsRepo.findAll();/

		ArrayList<Gadgets> gadgets = new ArrayList<>();
		gadgetsRepo.findAll().forEach(gadgets::add);
		return gadgets;

	}
	
	public Optional<Gadgets> getItemsById(int itemId) {
//		Optional<Gadgets> byId = gadgetsRepo.findById(itemId); // optional


		if (gadgetsRepo.existsById(itemId)) {
			return gadgetsRepo.findById(itemId);
		}else{
			return null;
		}
	}

	public Gadgets saveGadget(Gadgets newGadget) {

		return gadgetsRepo.save(newGadget);

	}

	public void deleteGadgetById(Integer id) {
        if (gadgetsRepo.existsById(id)){
          gadgetsRepo.deleteById(id);
		}
	}

	public Gadgets editGadget(Gadgets newGadget,Integer gadgetsId){

		Gadgets gadget = gadgetsRepo.getById(gadgetsId);

		newGadget.setId(gadgetsId);
		gadget.setBrandName(newGadget.getBrandName());
		gadget.setItemName(newGadget.getItemName());
		gadget.setPrice(newGadget.getPrice());
		gadget.setUnits(newGadget.getUnits());

	return 	gadgetsRepo.save(gadget);

	}
}
//Student database management

controller------------------------------------------------------------------------------------------------

package com.example.gadgets.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.example.gadgets.entity.Gadgets;
import com.example.gadgets.service.GadgetsService;



@RestController
public class GadgetsController {

	@Autowired
	GadgetsService gadgetsService;

	@GetMapping(path = "/gadgets")
	public ResponseEntity<List<Gadgets>> getAllItem() {
		List<Gadgets> allItems = gadgetsService.getAllItems();

		if (allItems != null) {
			return new ResponseEntity<List<Gadgets>>(allItems, HttpStatus.OK);
		} else {
			return new ResponseEntity<List<Gadgets>>(HttpStatus.NOT_FOUND);
		}
	}

	@GetMapping(path = "/gadgets/{itemsId}")
	public ResponseEntity<Optional<Gadgets>> getItemById(@PathVariable int itemsId) {
		Optional<Gadgets> itemsById = gadgetsService.getItemsById(itemsId);
		if (itemsById != null) {
			return new ResponseEntity<Optional<Gadgets>>(itemsById, HttpStatus.OK);
		} else {
			return new ResponseEntity<Optional<Gadgets>>(HttpStatus.NOT_FOUND);
		}
	}

	@PostMapping("/gadgets")
	public ResponseEntity<Gadgets> addGadget(@RequestBody Gadgets newGadget) {
		Gadgets gadgets = gadgetsService.saveGadget(newGadget);


//		if (gadgets.getBrandName()== null && gadgets.getBrandName().isEmpty() ){
//			return new ResponseEntity<Gadgets>(HttpStatus.BAD_REQUEST);
//		}
		return new ResponseEntity<>(newGadget, HttpStatus.CREATED);

	}


	@DeleteMapping("/gadgets/{gadgetsId}")
	public ResponseEntity<HttpStatus> deleteGadget(@PathVariable Integer gadgetsId) {
		gadgetsService.deleteGadgetById(gadgetsId);
		return new ResponseEntity<>(HttpStatus.OK);

	}

	@PutMapping("/gadgets/{gadgetsId}")
	public ResponseEntity<Gadgets> editGadget(@RequestBody Gadgets newGadget,@PathVariable Integer gadgetsId ){
		Gadgets gadgets = gadgetsService.editGadget(newGadget, gadgetsId);
		return new ResponseEntity<>(newGadget,HttpStatus.OK);

	}



}


Main application---------------------------------------------------------------
package com.example.gadgets;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;

import com.example.gadgets.entity.Gadgets;
import com.example.gadgets.repository.GadgetsRepository;


@SpringBootApplication
public class GadgetsApplication {

	public static void main(String[] args) {
		
		ApplicationContext context = SpringApplication.run(GadgetsApplication.class, args);
		
		GadgetsRepository gadgetsRepo = context.getBean(GadgetsRepository.class);
		
		Gadgets gadgets = new Gadgets();
		gadgets.setItemName("Mobile");
		gadgets.setBrandName("Vivo");
		gadgets.setUnits(5);
		gadgets.setPrice(13000.00);
		gadgetsRepo.save(gadgets);
		
		Gadgets gadgets1 = new Gadgets();
		gadgets1.setItemName("Washing Machine");
		gadgets1.setBrandName("LG");
		gadgets1.setUnits(3);
		gadgets1.setPrice(15000.00);
		gadgetsRepo.save(gadgets1);
	}

}
